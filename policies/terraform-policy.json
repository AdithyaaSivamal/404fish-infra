{
	"Version": "2012-10-17",
	"Statement": [
		{
			"Sid": "EC2NetworkAndVPC",
			"Effect": "Allow",
			"Action": [
				"ec2:CreateVpc",
				"ec2:DeleteVpc",
				"ec2:ModifyVpcAttribute",
				"ec2:CreateSubnet",
				"ec2:DeleteSubnet",
				"ec2:CreateInternetGateway",
				"ec2:DeleteInternetGateway",
				"ec2:AttachInternetGateway",
				"ec2:DetachInternetGateway",
				"ec2:CreateNatGateway",
				"ec2:DeleteNatGateway",
				"ec2:AllocateAddress",
				"ec2:ReleaseAddress",
				"ec2:CreateRouteTable",
				"ec2:DeleteRouteTable",
				"ec2:CreateRoute",
				"ec2:DeleteRoute",
				"ec2:AssociateRouteTable",
				"ec2:DisassociateRouteTable",
				"ec2:CreateSecurityGroup",
				"ec2:DeleteSecurityGroup",
				"ec2:AuthorizeSecurityGroupIngress",
				"ec2:AuthorizeSecurityGroupEgress",
				"ec2:RevokeSecurityGroupIngress",
				"ec2:RevokeSecurityGroupEgress",
				"ec2:DescribeVpcs",
				"ec2:DescribeSubnets",
				"ec2:DescribeAvailabilityZones",
				"ec2:DescribeNetworkInterfaces",
				"ec2:CreateNetworkInterface",
				"ec2:DeleteNetworkInterface",
				"ec2:RunInstances",
				"ec2:TerminateInstances",
				"ec2:DescribeInstances",
				"ec2:CreateTags",
				"ec2:CreateFlowLogs",
				"ec2:DeleteFlowLogs",
				"ec2:DescribeFlowLogs"
			],
			"Resource": "*"
		},
		{
			"Sid": "ECR",
			"Effect": "Allow",
			"Action": [
				"ecr:CreateRepository",
				"ecr:DeleteRepository",
				"ecr:DescribeRepositories",
				"ecr:ListTagsForResource",
				"ecr:SetRepositoryPolicy",
				"ecr:TagResource"
			],
			"Resource": "*"
		},
		{
			"Sid": "RDSandSecretsManager",
			"Effect": "Allow",
			"Action": [
				"rds:CreateDBInstance",
				"rds:DeleteDBInstance",
				"rds:DescribeDBInstances",
				"rds:CreateDBSubnetGroup",
				"rds:DeleteDBSubnetGroup",
				"rds:DescribeDBSubnetGroups",
				"rds:ListTagsForResource",
				"secretsmanager:CreateSecret",
				"secretsmanager:DeleteSecret",
				"secretsmanager:TagResource",
				"secretsmanager:UntagResource",
				"secretsmanager:DescribeSecret",
				"secretsmanager:ListSecrets",
				"secretsmanager:GetSecretValue",
				"secretsmanager:UpdateSecret"
			],
			"Resource": "*"
		},
		{
			"Sid": "ECSAndELB",
			"Effect": "Allow",
			"Action": [
				"ecs:CreateCluster",
				"ecs:DeleteCluster",
				"ecs:DescribeClusters",
				"ecs:CreateService",
				"ecs:DeleteService",
				"ecs:UpdateService",
				"ecs:DescribeServices",
				"ecs:RegisterTaskDefinition",
				"ecs:DeregisterTaskDefinition",
				"ecs:DescribeTaskDefinition",
				"ecs:ListTasks",
				"ecs:TagResource",
				"elasticloadbalancing:CreateLoadBalancer",
				"elasticloadbalancing:DeleteLoadBalancer",
				"elasticloadbalancing:DescribeLoadBalancers",
				"elasticloadbalancing:CreateTargetGroup",
				"elasticloadbalancing:DeleteTargetGroup",
				"elasticloadbalancing:DescribeTargetGroups",
				"elasticloadbalancing:CreateListener",
				"elasticloadbalancing:DeleteListener",
				"elasticloadbalancing:DescribeListeners",
				"elasticloadbalancing:DescribeTags",
				"elasticloadbalancing:AddTags",
				"elasticloadbalancing:RemoveTags",
				"elasticloadbalancing:DescribeTargetHealth",
				"elasticloadbalancing:RegisterTargets",
				"elasticloadbalancing:DeregisterTargets",
				"elasticloadbalancing:ModifyListener",
				"elasticloadbalancing:ModifyLoadBalancerAttributes",
				"elasticloadbalancing:ModifyTargetGroup",
				"elasticloadbalancing:ModifyTargetGroupAttributes"
			],
			"Resource": "*"
		},
		{
			"Sid": "IAMForOIDCProvider",
			"Effect": "Allow",
			"Action": [
				"iam:CreateOpenIDConnectProvider",
				"iam:DeleteOpenIDConnectProvider",
				"iam:ListOpenIDConnectProviders",
				"iam:GetOpenIDConnectProvider",
				"iam:TagOpenIDConnectProvider",
				"iam:UntagOpenIDConnectProvider",
				"iam:ListOpenIDConnectProviderTags"
			],
			"Resource": "arn:aws:iam::068882397753:oidc-provider/gitlab.com"
		},
		{
			"Sid": "AllowIAMPolicyAndRoleManagement",
			"Effect": "Allow",
			"Action": [
				"iam:CreateRole",
				"iam:DeleteRole",
				"iam:AttachRolePolicy",
				"iam:DetachRolePolicy",
				"iam:GetRole",
				"iam:ListAttachedRolePolicies",
				"iam:TagRole",
				"iam:UntagRole",
				"iam:PassRole",
				"iam:CreatePolicy",
				"iam:DeletePolicy",
				"iam:GetPolicy",
				"iam:GetPolicyVersion",
				"iam:CreatePolicyVersion",
				"iam:DeletePolicyVersion",
				"iam:ListPolicyVersions",
				"iam:TagPolicy",
				"iam:UntagPolicy",
				"iam:ListRoleTags",
				"iam:ListPolicyTags"
			],
			"Resource": [
				"arn:aws:iam::068882397753:role/containerized-apps-infra-dev-*",
				"arn:aws:iam::068882397753:policy/containerized-apps-infra-dev-*",
				"arn:aws:iam::068882397753:role/containerized-apps-infra-prod-*",
				"arn:aws:iam::068882397753:policy/containerized-apps-infra-prod-*"
			]
		},
		{
			"Sid": "S3KMSCloudTrailAndLogs",
			"Effect": "Allow",
			"Action": [
				"s3:CreateBucket",
				"s3:DeleteBucket",
				"s3:PutBucketPolicy",
				"s3:GetBucketPolicy",
				"s3:DeleteBucketPolicy",
				"s3:PutBucketPublicAccessBlock",
				"s3:GetBucketPublicAccessBlock",
				"s3:PutEncryptionConfiguration",
				"s3:GetEncryptionConfiguration",
				"s3:GetBucketAcl",
				"s3:ListBucket",
				"s3:GetObject",
				"s3:PutObject",
				"s3:DeleteObject",
				"kms:CreateKey",
				"kms:EnableKeyRotation",
				"kms:TagResource",
				"kms:UntagResource",
				"kms:GetKeyRotationStatus",
				"kms:GetKeyPolicy",
				"kms:PutKeyPolicy",
				"kms:ScheduleKeyDeletion",
				"kms:ListResourceTags",
				"cloudtrail:CreateTrail",
				"cloudtrail:DeleteTrail",
				"cloudtrail:AddTags",
				"cloudtrail:GetTrailStatus",
				"cloudtrail:StartLogging",
				"cloudtrail:StopLogging",
				"cloudtrail:DescribeTrails",
				"cloudtrail:ListTags",
				"logs:CreateLogGroup",
				"logs:DeleteLogGroup",
				"logs:DescribeLogGroups",
				"logs:ListTagsLogGroup",
				"logs:ListTagsForResource",
				"logs:TagResource",
				"logs:UntagResource",
				"logs:PutRetentionPolicy"
			],
			"Resource": "*"
		},
		{
			"Sid": "CostManagement",
			"Effect": "Allow",
			"Action": [
				"budgets:ModifyBudget",
				"budgets:ViewBudget",
				"budgets:ListTagsForResource",
				"ce:CreateAnomalyMonitor",
				"ce:DeleteAnomalyMonitor",
				"ce:CreateAnomalySubscription",
				"ce:DeleteAnomalySubscription",
				"ce:UpdateAnomalySubscription",
				"ce:GetAnomalyMonitors",
				"ce:GetAnomalySubscriptions",
				"ce:ListTagsForResource"
			],
			"Resource": "*"
		},
		{
			"Sid": "RequiredForTimeProvider",
			"Effect": "Allow",
			"Action": "ec2:DescribeRegions",
			"Resource": "*"
		},
		{
			"Sid": "DNSSSLManagement",
			"Effect": "Allow",
			"Action": [
				"route53:*",
				"acm:*"
			],
			"Resource": "*"
		}
	]
}
